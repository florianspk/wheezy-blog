apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wheezy-blog.fullname" . }}
  labels:
    {{- include "wheezy-blog.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "wheezy-blog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "wheezy-blog.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wheezy-blog.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
{{- if .Values.anubis.enabled }}
        - name: anubis
          image: ghcr.io/techarohq/anubis:v1.21.3
          imagePullPolicy: Always
          env:
            - name: "BIND"
              value: ":8080"
            - name: "DIFFICULTY"
              value: "4"
            - name: ED25519_PRIVATE_KEY_HEX
              valueFrom:
                secretKeyRef:
                  name: anubis-key
                  key: ED25519_PRIVATE_KEY_HEX
            - name: "METRICS_BIND"
              value: ":9090"
            - name: "SERVE_ROBOTS_TXT"
              value: "false"
            - name: "TARGET"
              value: "http://localhost:80"
            - name: "OG_PASSTHROUGH"
              value: "true"
            - name: "OG_EXPIRY_TIME"
              value: "12h"
          resources:
            limits:
              cpu: 750m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
{{ end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.probes.liveness | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.probes.readiness | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: var-cache-nginx
              mountPath: /var/cache/nginx
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
